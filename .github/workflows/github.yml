# 4. Store an IAM user access key in GitHub Actions secrets named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.
#    See the documentation for each action used below for the recommended IAM policies for this IAM user,
#    and best practices on handling the access key credentials.

name: Deploy to AWS

on:
  push:
    branches: [ "master" ]
  pull_request:
    types:
      - labeled

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    env:
      CI: false
    container:
      image: leapfrogtechnology/envault:0.4.6-node10.16.0-stretch-slim

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Stage
      env:
        CI: false
      run: |
        ls -al
        if [ $GITHUB_REF_NAME == "master" ];
        then
          echo "export STAGE=master" >> root/.profile
        elif [ $GITHUB_REF_NAME == "mike" ];
        then
          echo 'export STAGE=mike' >> root/.profile
        elif [ ${{ github.event.label.name }} == 'enterprise' ];
        then
          echo 'export STAGE=enterprise' >> root/.profile
        elif [ ${{ github.event.label.name }} == 'voyager' ];
        then
          echo 'export STAGE=voyager' >> root/.profile
        elif [ ${{ github.event.label.name }} == 'cerritos' ];
        then
          echo 'export STAGE=cerritos' >> root/.profile
        else
          echo 'export STAGE=dirty' >> root/.profile
        fi

    - name: Login to AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Run Deployment
      run: |
        . root/.profile
        chmod +x deploy.sh
        ./deploy.sh $STAGE
  notify:
    needs: [deploy]
    name: Notify on Slack
    runs-on: ubuntu-22.04
    steps:
      - name: Notify Slack Success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1.5.0
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: monitoring
          status: SUCCESS
          color: good

      - name: Notify Slack Fail
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1.5.0
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: monitoring
          status: FAILED
          color: danger




