name: Appealio-API Workflow
on:
  push:
    branches:
      - master
      - staging
      - showcase
      - dev
      - uat
  pull_request:
    types:
      - labeled

env:
  EXECUTION: true

jobs:
  runDeployment:
    name: Run Deployment
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Stage Setup
      - name: Setup Stage
        shell: bash
        run: |
          sudo apt -y update || true
          if [ $GITHUB_REF_NAME == "master" ]
          then
            echo "export STAGE=prod" >> ~/.bash_profile
          elif [ $GITHUB_REF_NAME == "staging" ]
          then
            echo "export STAGE=staging" >> ~/.bash_profile
          elif [ $GITHUB_REF_NAME == "showcase" ]
          then
            echo "export STAGE=showcase" >> ~/.bash_profile
          elif [ $GITHUB_REF_NAME == "dev" ]
          then
            echo "export STAGE=dev" >> ~/.bash_profile
          elif [ $GITHUB_REF_NAME == "uat" ]
          then
            echo "export STAGE=uat" >> ~/.bash_profile
          elif [ ${{ github.event.label.name }} == 'enterprise' ]
          then
            echo "export STAGE=enterprise" >> ~/.bash_profile
          elif [ ${{ github.event.label.name }} == 'voyager' ]
          then
            echo "export STAGE=voyager" >> ~/.bash_profile
          elif [ ${{ github.event.label.name }} == 'cerritos' ]
          then
            echo "export STAGE=cerritos" >> ~/.bash_profile
          else
            echo "export STAGE=dirty" >> ~/.bash_profile
            echo "{'EXECUTION'}={false}" >> $GITHUB_ENV
          fi
          echo ${{ env.EXECUTION }}

#      # Login
#      - name: Login to AWS
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_REGION }}
#        if: contains(fromJson('["prod", "staging", "showcase", "enterprise", "voyager", "cerritos"]'), ENV_NAME)

      # Deploy Services
      - name: Deploy Services to AWS
        if: ${{ env.EXECUTION }}
        shell: bash
        run: |
          echo $EXECUTION
          source ~/.bash_profile
          echo $STAGE
#          chmod +x deploy/deploy.sh
#          deploy/deploy.sh $STAGE


#      # send notifications to slack channel
#      - name: Notify Slack Success
#        if: success()
#        uses: rtCamp/action-slack-notify@v2.2.0
#        env:
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
#          SLACK_MESSAGE: 'Build Succeed :rocket:'
#          SLACK_USERNAME: 'GitHub_Actions'
#          SLACK_ICON: https://docvocate.com/assets/img/logo.png
#          SLACK_COLOR: 'good'
#
#      - name: Notify Slack Fail
#        if: failure()
#        uses: rtCamp/action-slack-notify@v2.2.0
#        env:
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
#          SLACK_MESSAGE: 'Build Failed :x:'
#          SLACK_USERNAME: 'GitHub_Actions'
#          SLACK_ICON: https://docvocate.com/assets/img/logo.png
#          SLACK_COLOR: '#F32013'
