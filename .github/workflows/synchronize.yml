# 4. Store an IAM user access key in GitHub Actions secrets named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.
#    See the documentation for each action used below for the recommended IAM policies for this IAM user,
#    and best practices on handling the access key credentials.

name: Synchronize Deployment

on:
  pull_request:
    types:
      - synchronize

jobs:
  checkLabels:
    runs-on: ubuntu-22.04
    if: ${{ contains(github.event.pull_request.labels.*.name, 'enterprise') }} ||
        ${{ contains(github.event.pull_request.labels.*.name, 'cerritos') }} ||
        ${{ contains(github.event.pull_request.labels.*.name, 'voyager') }}
    steps:
      - run: echo LABELS should match test environment names

  deploy:
    needs: [checkLabels]
    strategy:
      matrix:
        label: ${{github.event.pull_request.labels.*.name}}

    name: Deployment for ${{matrix.label}}
    runs-on: ubuntu-22.04
    env:
      CI: false
    container:
      image: leapfrogtechnology/envault:0.4.6-node10.16.0-stretch-slim
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Stage
        env:
          CI: false
        run: |
          echo 'export STAGE="${{matrix.label}}"' >> root/.profile

      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Run Deployment
        run: |
          . root/.profile
          chmod +x deploy.sh
          ./deploy.sh $STAGE

#  notify:
#    needs: [deploy]
#    name: Notify on Slack
#    runs-on: ubuntu-22.04
#    steps:
#      - name: Notify Slack Success
#        if: success()
#        env:
#          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
#        uses: voxmedia/github-action-slack-notify-build@v1.5.0
#        with:
#          message_id: ${{ steps.slack.outputs.message_id }}
#          channel: monitoring
#          status: SUCCESS
#          color: good
#
#      - name: Notify Slack Fail
#        if: failure()
#        env:
#          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
#        uses: voxmedia/github-action-slack-notify-build@v1.5.0
#        with:
#          message_id: ${{ steps.slack.outputs.message_id }}
#          channel: monitoring
#          status: FAILED
#          color: danger





